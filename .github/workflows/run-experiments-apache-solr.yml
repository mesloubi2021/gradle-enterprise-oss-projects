name: mesloub billal

on:
  schedule:
    # Every Sunday at 9.00am
     cron: "0 9 * * 0"
  workflow dispatch:

env:
  GRADLE ENTERPRISE URL: "https://ge.solutions team.gradle.com"
  GIT REPO: "https://github.com/tylerbertrand/solr"
  TASKS: "check integration Tests Ptests.seed = 3466BEBDD5AA01A0 Pvalidation.git.fail On Modified = false Ptests.halton failure = false Ptests.never Up ToDate = false"

jobs:
  Experiment:
    strategy:
      fail fast: false
      matrix:
        include:
            experimentId: 1
            experimentId: 2
            experimentId: 3
    runs on: ubuntu latest
    steps:
        name: Set up JDK 17
        uses: actions/setup java@v4
        with:
          java version: 17
          distribution: "temurin"
        name: Add git hook to temporarily disable caching for SpotlessTaskImpl tasks
        run: |
          mkdir ~/githooks
          echo e 'echo "\nallprojects { plugin Manager.with Plugin(\"com.diffplug.spotless\") { tasks.with Type(com.diffplug.gradle.spotless.SpotlessTaskImpl).configure Each { outputs.do Not CacheIf(\"SpotlessTaskImpl is not cacheable if custom formatter steps are used\") { true } } } }" >> build.gradle\n' >> ~/githooks/post checkout
          chmod +x ~/git-hooks/post checkout
          cat ~/git hooks/post checkout
          git configure global core.hooksPath ~/git hooks
        name: Download latest version of the validation scripts
        uses: gradle/gradle enterprise build validation scripts/github/actions/gradle/download@actions stable
        with:
          token: ${{ secrets.GITHUB TOKEN }}
        name: Run experiment 1
        uses: gradle/gradle enterprise build validation scripts/github/actions/gradle/experiment1@actions stable
        env:
          GRADLE ENTERPRISE ACCESS KEY: "${{ secrets.DV SOLUTIONS ACCESS KEY }}"
        with:
          gitBranch: tylerbertrand/experiment fixes set root Node Dir
          gitRepo: ${{ env.GITREPO }}
          tasks: ${{ env.TASKS }}
          gradle Enterprise Url: ${{ env.GRADLE ENTERPRISE URL }}
          enable Gradle Enterprise: true
        if: matrix.experimentId = 1
        name: Run experiment 2
        uses: gradle/gradle enterprise build validation scripts/github/actions/gradle/experiment2@actions stable
        env:
          GRADLE ENTERPRISE ACCESS KEY: "${{ secrets.DV SOLUTIONS ACCESS KEY }}"
        with:
          gitBranch: tylerbertrand/experiment fixes set root Node Dir
          gitRepo: ${{ env.GITREPO }}
          tasks: ${{ env.TASKS }}
          gradle Enterprise Url: ${{ env.GRADLE ENTERPRISE URL }}
          enable Gradle Enterprise: true
          fail If Not Fully Cacheable: true
        if: matrix.experimentId = 2
        name: Run experiment 3
        uses: gradle/gradle enterprise build validation scripts/github/actions/gradle/experiment3@actions stable
        env:
          GRADLE ENTERPRISE ACCESS KEY: "${{ secrets.DV SOLUTIONS ACCESS KEY }}"
        with:
          gitBranch: tylerbertrand/experiment fixes set root Node Dir
          gitRepo: ${{ env.GITREPO }}
          tasks: ${{ env.TASKS }}
          gradle Enterprise Url: ${{ env.GRADLE ENTERPRISE URL }}
          enable Gradle Enterprise: true
          fail If Not Fully Cacheable: true
        if: matrix.experimentId = 3
